{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/orderConstants.js","constants/userConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","screens/ProductScreen.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","href","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","useEffect","listProductDetails","params","md","Image","alt","fluid","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","createProductReview","Group","controlId","Label","row","listProducts","productId","post","ProductCarousel","Carousel","pause","Caption","HomeScreen","search","sm","lg","xl","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPaypalScript","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4ed0d70d.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const  CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const  CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const ORDER_CREATE_REQUEST ='ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, \r\n        productDetailsReducer, \r\n        productDeleteReducer,\r\n        productCreateReducer,\r\n        productUpdateReducer,\r\n        productReviewCreateReducer,\r\n        productTopRatedReducer,\r\n     } \r\n        from './reducers/productReducers';\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\n\r\nimport {orderCreateReducer, \r\n        orderDetailsReducer, \r\n        orderPayReducer, \r\n        orderListMyReducer,\r\n        orderListReducer,\r\n        orderDeliverReducer } \r\n        from './reducers/orderReducers';\r\n\r\nimport { userLoginReducer, \r\n        userRegisterReducer, \r\n        userDetailsReducer, \r\n        userUpdateProfileReducer, \r\n        userListReducer, \r\n        userDeleteReducer,\r\n        userUpdateReducer\r\n     } from './reducers/userReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    \r\n    userLogin: {userInfo: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\nexport default store\r\n","import \r\n{\r\n\r\nPRODUCT_LIST_REQUEST, \r\nPRODUCT_LIST_SUCCESS, \r\nPRODUCT_LIST_FAIL,\r\n\r\nPRODUCT_DETAILS_REQUEST, \r\nPRODUCT_DETAILS_SUCCESS, \r\nPRODUCT_DETAILS_FAIL,\r\n\r\nPRODUCT_DELETE_REQUEST, \r\nPRODUCT_DELETE_SUCCESS, \r\nPRODUCT_DELETE_FAIL,\r\n\r\nPRODUCT_CREATE_REQUEST, \r\nPRODUCT_CREATE_SUCCESS, \r\nPRODUCT_CREATE_FAIL,\r\nPRODUCT_CREATE_RESET,\r\n\r\nPRODUCT_UPDATE_REQUEST, \r\nPRODUCT_UPDATE_SUCCESS, \r\nPRODUCT_UPDATE_FAIL,\r\nPRODUCT_UPDATE_RESET,\r\n\r\nPRODUCT_CREATE_REVIEW_REQUEST, \r\nPRODUCT_CREATE_REVIEW_SUCCESS, \r\nPRODUCT_CREATE_REVIEW_FAIL,\r\nPRODUCT_CREATE_REVIEW_RESET,\r\n\r\nPRODUCT_TOP_REQUEST,\r\nPRODUCT_TOP_SUCCESS,\r\nPRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products:[]}\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                products: action.payload.products, \r\n                page: action.payload.page, \r\n                pages: action.payload.pages \r\n                }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n                return {loading: false, error: action.payload}\r\n        \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) => {\r\n\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true, ...state}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, product: action.payload}\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n                return {loading: false, error: action.payload}\r\n        \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n\r\n    switch(action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n                return {loading: false, error: action.payload}\r\n        \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n\r\n    switch(action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n                return {loading: true}\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n                return {loading: false, success: true, product: action.payload}\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n                return {loading: false, error: action.payload}\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n                return {}\r\n        \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\nexport const productUpdateReducer = (state = {product:{}}, action) => {\r\n\r\n        switch(action.type) {\r\n            case PRODUCT_UPDATE_REQUEST:\r\n                    return {loading: true}\r\n    \r\n            case PRODUCT_UPDATE_SUCCESS:\r\n                    return {loading: false, success: true, product: action.payload}\r\n    \r\n            case PRODUCT_UPDATE_FAIL:\r\n                    return {loading: false, error: action.payload}\r\n    \r\n            case PRODUCT_UPDATE_RESET:\r\n                    return { product:{} }\r\n            \r\n            default:\r\n                    return state\r\n            \r\n            }\r\n            \r\n    }\r\n\r\n\r\n    export const productReviewCreateReducer = (state = {}, action) => {\r\n\r\n        switch(action.type) {\r\n            case PRODUCT_CREATE_REVIEW_REQUEST:\r\n                    return {loading: true}\r\n    \r\n            case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n                    return {loading: false, success: true}\r\n    \r\n            case PRODUCT_CREATE_REVIEW_FAIL:\r\n                    return {loading: false, error: action.payload}\r\n    \r\n            case PRODUCT_CREATE_REVIEW_RESET:\r\n                    return { }\r\n            \r\n            default:\r\n                    return state\r\n            \r\n            }\r\n            \r\n    }\r\n\r\n    export const productTopRatedReducer = (state = {products:[]}, action) => {\r\n\r\n        switch(action.type) {\r\n            case PRODUCT_TOP_REQUEST:\r\n                    return {loading: true, products:[]}\r\n    \r\n            case PRODUCT_TOP_SUCCESS:\r\n                    return {loading: false, products: action.payload}\r\n    \r\n            case PRODUCT_TOP_FAIL:\r\n                    return {loading: false, error: action.payload}\r\n            \r\n            default:\r\n                    return state\r\n            \r\n            }\r\n            \r\n    }","import { \r\n        CART_ADD_ITEM, \r\n        CART_REMOVE_ITEM, \r\n        CART_SAVE_SHIPPING_ADDRESS,\r\n        CART_SAVE_PAYMENT_METHOD,\r\n        CART_CLEAR_ITEMS\r\n        } \r\n        from '../constants/cartConstants';\r\n\r\n\r\nexport const cartReducer = (state={cartItems:[], shippingAddress: {} }, action) => {\r\n        switch(action.type) {\r\n            case CART_ADD_ITEM:\r\n                    const item = action.payload\r\n                    const existItem = state.cartItems.find(x=> x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x=>\r\n                    x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n            case CART_REMOVE_ITEM:\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.filter(x=> x.product !== action.payload)\r\n                }\r\n\r\n            case CART_SAVE_SHIPPING_ADDRESS:\r\n                return{\r\n                    ...state,\r\n                    shippingAddress: action.payload\r\n                }\r\n\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload\r\n                }\r\n\r\n            case CART_CLEAR_ITEMS:\r\n                return {\r\n                    ...state,\r\n                    cartItems: []\r\n                }\r\n\r\n            default:\r\n                return state\r\n        }\r\n} ","import { USER_LOGIN_REQUEST, \r\n         USER_LOGIN_SUCCESS,\r\n         USER_LOGIN_FAIL,\r\n\r\n         USER_LOGOUT,\r\n\r\n         USER_REGISTER_REQUEST, \r\n         USER_REGISTER_SUCCESS,\r\n         USER_REGISTER_FAIL,\r\n\r\n         USER_DETAILS_REQUEST, \r\n         USER_DETAILS_SUCCESS,\r\n         USER_DETAILS_FAIL,\r\n         USER_DETAILS_RESET,\r\n\r\n         USER_UPDATE_PROFILE_REQUEST, \r\n         USER_UPDATE_PROFILE_SUCCESS,\r\n         USER_UPDATE_PROFILE_FAIL,\r\n         USER_UPDATE_PROFILE_RESET,\r\n\r\n         USER_LIST_REQUEST, \r\n         USER_LIST_SUCCESS,\r\n         USER_LIST_FAIL,\r\n         USER_LIST_RESET,\r\n\r\n         USER_DELETE_REQUEST, \r\n         USER_DELETE_SUCCESS,\r\n         USER_DELETE_FAIL,\r\n\r\n         USER_UPDATE_REQUEST, \r\n         USER_UPDATE_SUCCESS,\r\n         USER_UPDATE_FAIL,\r\n         USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n     \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n     \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n\r\n    switch(action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true}\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload}\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_DETAILS_RESET:\r\n                return {user: {} }\r\n     \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    \r\n    switch(action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success: true, userInfo: action.payload}\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n                return {}\r\n     \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\nexport const userListReducer = (state = {users:[]}, action) => {\r\n    \r\n    switch(action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload}\r\n\r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_LIST_RESET:\r\n                return {users: []}\r\n     \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    \r\n    switch(action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading: false, success: true}\r\n\r\n        case USER_DELETE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n     \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n    \r\n    switch(action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true}\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n     \r\n        default:\r\n                return state\r\n        \r\n        }\r\n        \r\n}","import {\r\n            ORDER_CREATE_REQUEST, \r\n            ORDER_CREATE_SUCCESS, \r\n            ORDER_CREATE_FAIL,\r\n            ORDER_CREATE_RESET,\r\n\r\n            ORDER_DETAILS_REQUEST,\r\n            ORDER_DETAILS_SUCCESS,\r\n            ORDER_DETAILS_FAIL,\r\n\r\n            ORDER_PAY_REQUEST,\r\n            ORDER_PAY_SUCCESS,\r\n            ORDER_PAY_FAIL,\r\n            ORDER_PAY_RESET,\r\n\r\n            ORDER_LIST_MY_REQUEST,\r\n            ORDER_LIST_MY_SUCCESS,\r\n            ORDER_LIST_MY_FAIL,\r\n            ORDER_LIST_MY_RESET,\r\n\r\n            ORDER_LIST_REQUEST,\r\n            ORDER_LIST_SUCCESS,\r\n            ORDER_LIST_FAIL,\r\n\r\n            ORDER_DELIVER_REQUEST,\r\n            ORDER_DELIVER_SUCCESS,\r\n            ORDER_DELIVER_FAIL,\r\n            ORDER_DELIVER_RESET,\r\n            \r\n    } \r\n        \r\nfrom '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders:[] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders:[]\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders:[] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n                type='text' \r\n                name='q' \r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            >\r\n            </Form.Control>\r\n            <Button \r\n                type='submit' \r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios';\r\nimport {\r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n    \r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST, \r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST, \r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST, \r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants';\r\n\r\nimport { ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET })\r\n    dispatch({type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar, Nav, Container, Row, Col, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport SearchBox from './SearchBox'\r\nimport {logout} from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to=\"/\">\r\n                    <Navbar.Brand>ProShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                 <SearchBox />\r\n                    <Nav className=\"ml-auto\">\r\n                    <LinkContainer to=\"/cart\">\r\n                        <Nav.Link href=\"/cart\"><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                    </LinkContainer>\r\n                    {userInfo ? (\r\n                            <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                    ) : (\r\n                        <LinkContainer to=\"/login\">\r\n                            <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                        </LinkContainer>\r\n                    )}\r\n\r\n                    {userInfo && userInfo.isAdmin && (\r\n                        <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                \r\n                        </NavDropdown>\r\n                    )}\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>       \r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n           <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                        Copyright &copy; Proshop\r\n                    </Col>\r\n                </Row>\r\n           </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n            <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n                \r\n            </span>\r\n            <span>\r\n            <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                     value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt': 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={\r\n                     value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt': 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n            <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n        }}>   \r\n            <span className=\"sr-only\">Loading....</span>         \r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin=false}) {\r\n\r\n    if(keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && \r\n       <Pagination>\r\n           {[...Array(pages).keys()].map((x) => (\r\n               <LinkContainer key={x+1}\r\n               to={!isAdmin ?\r\n                   `/?keyword=${keyword}&page=${x+1}`\r\n                   : `/admin/productlist/?keyword=${keyword}&page=${x+1}`\r\n\r\n                 }\r\n               >\r\n                <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n               </LinkContainer>\r\n           ))}\r\n       </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n//import products from '../products';\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    // const product = products.find((p) => p._id == match.params.id)\r\n    //const [product, setProduct] = useState([])\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { \r\n        loading: loadingProductReview, \r\n        error: errorProductReview, \r\n        success: successProductReview,\r\n        } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className=\"btn btn-light my-3\"></Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant=\"danger\">{error}</Message>\r\n                    :\r\n                    (\r\n                        <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Price: ${product.price}\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Description: {product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price: </Col>\r\n                                                <Col><strong> ${product.price}</strong></Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status: </Col>\r\n                                                <Col>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        {\r\n                                            product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange= {(e)=> setQty(e.target.value)}>\r\n                                                                {\r\n                                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )\r\n                                        }\r\n                                        <ListGroup.Item>\r\n                                            <Button onClick={addToCartHandler} className=\"btn-block\" disabled={product.countInStock == 0} type=\"button\">Add to Cart</Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h4>Reviews</h4>\r\n                                {\r\n                                    product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>                  \r\n                                }\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map((review) => (\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825'/>\r\n                                            <p>{review.createdAt.substring(0,10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                    <ListGroup.Item>\r\n                                        <h4>Write a Review</h4>\r\n                                        {loadingProductReview && <Loader/> }\r\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                        {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                           onChange={(e) => setRating(e.target.value)}\r\n                                                         >\r\n                                                         \r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1. Poor</option>\r\n                                                            <option value='2'>2. Fair</option>\r\n                                                            <option value='3'>3. Good</option>\r\n                                                            <option value='4'>4. Very Good</option>\r\n                                                            <option value='5'>5. Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control \r\n                                                         as='textarea'\r\n                                                         row='5'\r\n                                                         value={comment}\r\n                                                         onChange={(e)=> setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button \r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >Submit</Button>\r\n                                                </Form>\r\n                                            ) : (\r\n                                                <Message variant='info'>Please <Link to='/login'>Login</Link> to write a review</Message>\r\n                                            )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios';\r\nimport \r\n{\r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS, \r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST, \r\n    PRODUCT_DELETE_SUCCESS, \r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST, \r\n    PRODUCT_CREATE_SUCCESS, \r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST, \r\n    PRODUCT_UPDATE_SUCCESS, \r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST, \r\n    PRODUCT_CREATE_REVIEW_SUCCESS, \r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST, \r\n    PRODUCT_TOP_SUCCESS, \r\n    PRODUCT_TOP_FAIL,\r\n} \r\nfrom '../constants/productConstants';\r\nimport ProductScreen from '../screens/ProductScreen';\r\n\r\nexport const listProducts = (keyword='') => async (dispatch) => {\r\n        try{\r\n            dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n            const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n            dispatch({\r\n                type: PRODUCT_LIST_SUCCESS,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_LIST_FAIL,\r\n                payload: error.response && error.response.data.detail ?\r\n                error.response.data.detail : error.message,\r\n            })\r\n        }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen","import axios from 'axios';\r\nimport { CART_ADD_ITEM, \r\n        CART_REMOVE_ITEM, \r\n        CART_SAVE_SHIPPING_ADDRESS,\r\n        CART_SAVE_PAYMENT_METHOD\r\n     } from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col } from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport  {login} from '../actions/userActions';\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                    <Form.Label>\r\n                        Email Address\r\n                    </Form.Label>\r\n                        <Form.Control type=\"email\" \r\n                            placeholder=\"Enter Email\" \r\n                            value={email} \r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n                        </Form.Control>               \r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                    <Form.Label>\r\n                        Password                    \r\n                    </Form.Label>\r\n                        <Form.Control type=\"password\" \r\n                            placeholder=\"Enter password\" \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    New Customer ? \r\n                    <Link to={redirect ? `/register?redirect=${redirect}`: '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col } from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport  {register} from '../actions/userActions';\r\n\r\nfunction RegisterScreen({location, history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n \r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have an Account ? \r\n                    <Link to={redirect ? `/login?redirect=${redirect}`: '/login'}>Sign In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport  {getUserDetails, updateUserProfile} from '../actions/userActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\nimport {listMyOrders} from '../actions/orderActions';\r\n\r\nfunction ProfileScreen({history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if(!user || !user.name || success || userInfo._id!== user._id) {\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n           dispatch(updateUserProfile({\r\n               'id': user._id,\r\n               'name': name,\r\n               'email': email,\r\n               'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    {loading && <Loader />}\r\n                    <Form onSubmit={submitHandler}>\r\n \r\n                        <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Update\r\n                </Button>\r\n\r\n            </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ): errorOrders ? (\r\n                    <Message variant=\"danger\">{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className=\"fas fa-times\" style={{color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios';\r\nimport {\r\n        ORDER_CREATE_REQUEST, \r\n        ORDER_CREATE_SUCCESS, \r\n        ORDER_CREATE_FAIL,\r\n\r\n        ORDER_DETAILS_REQUEST,\r\n        ORDER_DETAILS_SUCCESS,\r\n        ORDER_DETAILS_FAIL,\r\n\r\n        \r\n        ORDER_PAY_REQUEST,\r\n        ORDER_PAY_SUCCESS,\r\n        ORDER_PAY_FAIL,\r\n        ORDER_PAY_RESET,\r\n\r\n        ORDER_LIST_MY_REQUEST,\r\n        ORDER_LIST_MY_SUCCESS,\r\n        ORDER_LIST_MY_FAIL,\r\n        ORDER_LIST_MY_RESET,\r\n\r\n        ORDER_LIST_REQUEST,\r\n        ORDER_LIST_SUCCESS,\r\n        ORDER_LIST_FAIL,\r\n\r\n        ORDER_DELIVER_REQUEST,\r\n        ORDER_DELIVER_SUCCESS,\r\n        ORDER_DELIVER_FAIL,\r\n        ORDER_DELIVER_RESET,\r\n\r\n    } \r\n    \r\nfrom '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>\r\n                        Login\r\n                    </Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Shipping\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>\r\n                        Shipping\r\n                    </Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>\r\n                            Payment\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>\r\n                        Payment\r\n                    </Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                            Placeorder\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n                ): (\r\n                    <Nav.Link disabled>\r\n                        Placeorder\r\n                    </Nav.Link>\r\n                )}\r\n\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport  {saveShippingAddress} from '../actions/cartActions';\r\n\r\nfunction ShippingScreen( {history} ) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address: ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city: ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode: ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country: ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"primary\">Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col} from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport  { savePaymentMethod } from '../actions/cartActions';\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n       history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check \r\n                            type=\"radio\" \r\n                            label=\"Paypal or Credit Card\"\r\n                            id=\"paypal\"\r\n                            name=\"paymentMethod\"\r\n                            checked\r\n                            onChange={(e)=> setPaymentMethod(e.target.value)}\r\n                        >\r\n                            \r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen( {history} ) {\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET} from '../constants/orderConstants'\r\n\r\nfunction OrderScreen( { match, history } ) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch();\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    //AZsaHzw6W2AvcYDt7ySxKOBRFhAJlVo23dBolj_l0EFjhorFdZeJAPHprXAEWAD5YEW8OtI8TaywAH5r\r\n\r\n    const addPaypalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AZsaHzw6W2AvcYDt7ySxKOBRFhAJlVo23dBolj_l0EFjhorFdZeJAPHprXAEWAD5YEW8OtI8TaywAH5r'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver ) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid){\r\n        if(!window.paypal) {\r\n            addPaypalScript()  \r\n        } else {\r\n            setSdkReady(true)\r\n        }\r\n    }\r\n}, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n    ):(\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                                <p><strong>Name: </strong>{order.user.name}</p>\r\n                                <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant=\"success\">Delivered on {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant=\"warning\">Not Delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant=\"warning\">Not paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader/>}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader />}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                    type='button' \r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}\r\n                                >\r\n                                    Mark as Deliver\r\n                                </Button>       \r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are yu sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading ? \r\n            <Loader />\r\n            : error ? (<Message variant=\"danger\">{error}</Message>)\r\n            :(\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Admin</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isAdmin ? (\r\n                                  <i className='fas fa-check' style={{color: 'green'}}></i>\r\n                                ): (\r\n                                    <i className='fas fa-check' style={{color: 'red'}}></i>  \r\n                                )}</td>\r\n                            <td>\r\n                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>  \r\n                                    </Button>\r\n                                </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>  \r\n                                    </Button>\r\n                            </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button } from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport  { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({match, history}) {\r\n\r\n    const userId = match.params.id;\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error:errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate) {\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id!== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id:user._id, name, email, isAdmin}))\r\n    }\r\n    return ( \r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> \r\n                : (\r\n                    <Form onSubmit={submitHandler}>   \r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n                )}\r\n            </FormContainer>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nfunction ProductListScreen({history, match}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({type: PRODUCT_CREATE_RESET})\r\n        if(!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this product?')) {\r\n           dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n\r\n            {loading ? \r\n            <Loader />\r\n            : error ? (<Message variant=\"danger\">{error}</Message>)\r\n            :(  \r\n                <div>\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Name</th>\r\n                            <th>Price</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>BRAND</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {products.map(product => (\r\n                            <tr key={product._id}>\r\n                                <td>{product._id}</td>\r\n                                <td>{product.name}</td>\r\n                                <td>${product.price}</td>\r\n                                <td>{product.category}</td> \r\n                                <td>{product.brand}</td>                              \r\n                            <td>\r\n                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>  \r\n                                    </Button>\r\n                                </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                        <i className='fas fa-trash'></i>  \r\n                                    </Button>\r\n                            </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button } from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport  { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductEditScreen({match, history}) {\r\n\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n            if(successUpdate) {\r\n                dispatch({type: PRODUCT_UPDATE_RESET})\r\n                history.push('/admin/productlist')\r\n            } else {\r\n                if (!product.name || product._id!== Number(productId)) {\r\n                    dispatch(listProductDetails(productId))\r\n                } else {\r\n                    setName(product.name)\r\n                    setPrice(product.price)\r\n                    setImage(product.image)\r\n                    setBrand(product.brand)\r\n                    setCategory(product.category)\r\n                    setCountInStock(product.countInStock)\r\n                    setDescription(product.description)\r\n                }\r\n            }\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async(e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n        setUploading(true)\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        }catch(error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{error}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> \r\n                : (\r\n                    <Form onSubmit={submitHandler}>   \r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder='Enter price'\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter image'\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                        <Form.File\r\n                            id='image-file'\r\n                            label='Choose File'\r\n                            custom\r\n                            onChange={uploadFileHandler}\r\n                        >\r\n                        </Form.File>\r\n                        {uploading && <Loader />}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter brand'\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    \r\n                    <Form.Group controlId='countinstock'>\r\n                        <Form.Label>Stock</Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder='Enter stock'\r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter category'\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description'>\r\n                        <Form.Label>description</Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter description'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant=\"primary\">\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n                )}\r\n            </FormContainer>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading ? \r\n            <Loader />\r\n            : error ? (<Message variant=\"danger\">{error}</Message>)\r\n            :(\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL PRICE</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? (\r\n                                  order.paidAt.substring(0, 10)\r\n                                ): (\r\n                                    <i className='fas fa-check' style={{color: 'red'}}></i>  \r\n                                )}\r\n                                </td>\r\n                                <td>{order.isDelivered ? (\r\n                                  order.deliveredAt.substring(0, 10)\r\n                                ): (\r\n                                    <i className='fas fa-check' style={{color: 'red'}}></i>  \r\n                                )}\r\n                                </td>\r\n                            <td>\r\n                                <LinkContainer to={`/order/${order._id}`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        Details\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                            </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import { Container } from 'react-bootstrap';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n          <main className=\"py-5\">\n          <Container>\n            <Route path='/' component={HomeScreen} exact/>\n            <Route path='/login' component={LoginScreen}/>\n            <Route path='/register' component={RegisterScreen}/>\n            <Route path='/profile' component={ProfileScreen}/>\n            <Route path='/shipping' component={ShippingScreen}/>\n            <Route path='/placeorder' component={PlaceOrderScreen}/>\n            <Route path='/order/:id' component={OrderScreen}/>\n            <Route path='/payment' component={PaymentScreen}/>\n            <Route path='/product/:id' component={ProductScreen}/>\n            <Route path='/cart/:id?' component={CartScreen}/>\n            <Route path='/admin/userlist' component={UserListScreen}/>\n            <Route path='/admin/user/:id/edit' component={UserEditScreen}/>\n            <Route path='/admin/productlist' component={ProductListScreen}/>\n            <Route path='/admin/product/:id/edit' component={ProductEditScreen}/>\n            <Route path='/admin/orderlist' component={OrderListScreen}/>\n          </Container>\n          </main>\n      <Footer />\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store= {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}